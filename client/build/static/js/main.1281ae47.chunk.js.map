{"version":3,"sources":["components/ButtonAppBar/index.js","components/Card/index.js","utils/API.js","pages/MaterialVideos.js","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","react_default","a","createElement","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Menu_default","Typography","variant","Button","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","MediaCard","props","Card","style","margin","backgroundColor","CardActionArea","CardMedia","id","type","height","src","concat","videoId","frameborder","CardContent","gutterBottom","component","API","getPlaylists","axios","get","MaterialVideo","_useState","useState","_useState2","Object","slicedToArray","yogaVideos","setYogaVideos","useEffect","then","res","data","items","catch","err","console","log","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","EmojiPeople_default","ExpansionPanelDetails","maxHeight","overflow","justifyContent","justify","map","video","snippet","resourceId","DirectionsRun_default","DirectionsBike_default","App","react","Container","fixed","react_router_dom","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDom","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1281ae47.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1, \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Amp My Workout! \n          </Typography> \n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card style={{ margin: \"20px\", backgroundColor: \"#f5f5f5\" }} className={classes.root}>\n                                <CardActionArea>\n                                    <CardMedia\n                                    > <iframe id=\"ytplayer\" type=\"text/html\" width=\"100%\" height=\"360\"\n                                        src={`https://www.youtube.com/embed/${props.videoId}?autoplay=1`}\n                                        frameborder=\"0\"></iframe></CardMedia>\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                                            {props.title}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n  );\n}\n","import axios from \"axios\";\n\nexport default {\n  getPlaylists: function() {\n    return axios.get(`https://www.googleapis.com/youtube/v3/playlistItems?part=snippet&playlistId=PL5TOTBNdO-gZvLIo-tPxNMyPwAwpHliol&key=AIzaSyDYrjg7hzSQAr0gK0-hxVillcmwo-yx9Tc`);\n  }\n}\n\nconst playlistId = \"PL5TOTBNdO-gZvLIo-tPxNMyPwAwpHliol\"\n\nconst playlistSearch = `https://www.googleapis.com/youtube/v3/channels/forUsername=Zach%2Nylen&key=AIzaSyDYrjg7hzSQAr0gK0-hxVillcmwo-yx9Tc`\n\n// const videoSearch = `https://www.googleapis.com/youtube/v3/search?part=snippet&order=viewCount&q=${search}&type=video&key=AIzaSyDYrjg7hzSQAr0gK0-hxVillcmwo-yx9Tc`","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike'; import ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport MediaCard from \"../components/Card/index\"\nimport API from \"../utils/API\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\n\n\nexport default function MaterialVideo() {\n    const [yogaVideos, setYogaVideos] = useState([])\n\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        API.getPlaylists()\n            .then(res => {\n                setYogaVideos(res.data.items)\n            })\n            .catch(err => console.log(err));\n    }, []);\n    console.log(yogaVideos)\n\n    return (\n        <div className={classes.root}>\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}><strong>Yoga</strong> </Typography> <EmojiPeopleIcon></EmojiPeopleIcon>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails style={{ maxHeight: 700, overflow: 'auto', justifyContent: \"center\" }}>\n                    <Typography justify=\"center\">\n                        {yogaVideos.map(video => (\n                            <MediaCard videoId= {video.snippet.resourceId.videoId} title={video.snippet.title}></MediaCard>\n                        ))}\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel2a-content\"\n                    id=\"panel2a-header\"\n                >\n                    <Typography className={classes.heading}> <strong>Running</strong> </Typography><DirectionsRunIcon></DirectionsRunIcon>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails style={{ maxHeight: 700, overflow: 'auto', justifyContent: \"center\" }}>\n                    <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                        sit amet blandit leo lobortis eget.\n          </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n\n            <ExpansionPanel>\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel2a-content\"\n                    id=\"panel2a-header\"\n                >\n                    <Typography style={{ margin: \"3px\" }} className={classes.heading}> <strong>Cycling</strong> </Typography> <DirectionsBikeIcon ></DirectionsBikeIcon>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails style={{ maxHeight: 700, overflow: 'auto', justifyContent: \"center\" }}>\n                    <Typography>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\n                        sit amet blandit leo lobortis eget.\n          </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n\n        </div>\n    );\n}","import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport Container from '@material-ui/core/Container';\nimport ButtonAppBar from \"./components/ButtonAppBar\";\nimport MaterialVideo from \"./pages/MaterialVideos\";\n\nfunction App() {\n  return (\n    <Fragment>\n    <ButtonAppBar />\n    <Container fixed>\n    <Router>\n      <div>\n        <br></br>\n       <MaterialVideo></MaterialVideo>\n      </div>\n    </Router>\n    </Container>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDom from 'react-dom';\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\nReactDom.render(<App />, document.getElementById('react-app'));\nregisterServiceWorker();\n"],"sourceRoot":""}